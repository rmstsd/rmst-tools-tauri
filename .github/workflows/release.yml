# 可选，将显示在 GitHub 存储库的“操作”选项卡中的工作流名称
name: Release CI

# 指定此工作流的触发器
on:
  push:
    # 匹配特定标签 (refs/tags)
    tags:
      - 'v*' # 推送事件匹配 v*, 例如 v1.0，v20.15.10 等来触发工作流
  workflow_dispatch:
    # jobs:
    #   release:
    #     permissions:
    #       contents: write
    #     strategy:
    #       fail-fast: false
    #       matrix:
    #         platform: [macos-latest, ubuntu-20.04, windows-latest]
    #     runs-on: ${{ matrix.platform }}

    #     steps:
    #       - name: Checkout repository
    #         uses: actions/checkout@v3

    #       - name: Install dependencies (ubuntu only)
    #         if: matrix.platform == 'ubuntu-20.04'
    #         # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
    #         run: |
    #           sudo apt-get update
    #           sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev
    #       - name: Rust setup
    #         uses: dtolnay/rust-toolchain@stable
    #       - name: Rust cache
    #         uses: swatinem/rust-cache@v2
    #         with:
    #           workspaces: './src-tauri -> target'
    #       - name: Sync node version and setup cache
    #         uses: actions/setup-node@v4
    #         with:
    #           node-version: 20
    #       - name: Install PNPM
    #         run: npm i -g pnpm
    #       - name: Install frontend dependencies
    #         # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
    #         run: pnpm install # Change this to npm, yarn or pnpm.

    #       - name: Build the app
    #         uses: tauri-apps/tauri-action@v0

    #         env:
    #           GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
    #           TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
    #           TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
    #         with:
    #           tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
    #           releaseName: 'rmst-tools v__VERSION__' # tauri-action replaces \_\_VERSION\_\_ with the app version.
    #           releaseBody: 'See the assets to download and install this version.'
    #           releaseDraft: false
    #           prerelease: false

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # - platform: 'macos-latest' # for Arm based macs (M1 and above).
          #   args: '--target aarch64-apple-darwin'
          # - platform: 'macos-latest' # for Intel based macs.
          #   args: '--target x86_64-apple-darwin'
          # - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
          #   args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

        # 如果你使用的是pnpm，需要先安装pnpm，官方示例使用的是yarn，使用没有这一步。
      - name: install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: true

      - name: install frontend dependencies
        run: pnpm install

      # 注意这个地方的环境变量，除GITHUB_TOKEN外，其他的需要手动进行配置。
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'rmst-tools-tauri v__VERSION__'
          releaseBody: '发布新版本啦啦啦!'
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
